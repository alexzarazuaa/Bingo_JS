name: Bingo WorkFlow
on:
 push:
  branches:
   - “githubActions_improvement”
jobs:
 syntax_check_job:
  runs-on: ubuntu-latest
  name: syntax_check_job
  steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Linter execution
        uses: github/super-linter@v3
        env:
          DEFAULT_BRANCH: nodejs_linter_job
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: /
          JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.js
          VALIDATE_JAVASCRIPT_ES: true
 test_execution_job:
   name: test_jest_bingo
   runs-on: ubuntu-latest
   steps:
    - name: "Checkout code"
      uses: actions/checkout@v2
    - name: testing bingo testing
      run: |
       npm install
       npm run test 
 build_statics_job:
    name: build_statics_job
    runs-on: ubuntu-latest
    needs: [syntax_check_job, test_execution_job]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: building app
        run: |
          npm install 
          npm run buildDev
      - name: artifact upload building app
        uses: actions/upload-artifact@v2
        with:
          name: building_app
          path: ./dist  
 deploy_job:
    name: deploy_job
    runs-on: ubuntu-latest
    needs: build_statics_job
    steps:
    - name: artifact for download the build
      uses: actions/download-artifact@v2
      with: 
        name: building_app
    - name: deploying  on surge
      uses: dswistowski/surge-sh-action@v1
      with:
        domain: alexzarazua88.surge.sh
        project: .
        login: ${{secrets.LOGIN_SURGE}}
        token: ${{secrets.TOKEN_SURGE}}
 notification_job:
    name: notification_job
    runs-on: ubuntu-latest
    needs: [syntax_check_job, test_execution_job, build_statics_job, deploy_job]
    if: ${{ always() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Send Email
        uses: ./.github/actions/notification_job_email
        with:
          WORK_CLASS_EMAIL: ${{ secrets.WORK_CLASS_EMAIL }}
          NODE_EMAIL_PASSWORD: ${{ secrets.NODE_EMAIL_PASSWORD }}
          MAIL_AUTHOR: ${{secrets.MAIL_AUTHOR}}
          syntax_check_job: ${{ needs.syntax_check_job.outputs.job-status }}
          test_execution_job: ${{ needs.test_execution_job.outputs.job-status }}
          build_statics_job: ${{needs.build_statics_job.outputs.job-status}}
          deploy_job: ${{ needs.deploy_job.outputs.job-status }